---
import { storyblokEditable} from '@storyblok/astro'
import { RichTextSchema, renderRichText } from '@storyblok/astro'
import cloneDeep from "clone-deep"
import KeyDate from './KeyDate.astro'
import Button from '../core/Button.astro'
const { blok } = Astro.props
const {keyDates} = blok
const mySchema = cloneDeep(RichTextSchema)
const renderedRichText = await renderRichText(blok.text, {
  schema: mySchema,
  resolver: (component, blok) => {
    switch (component) {
      case "button":
        return `<a class="btn btn-primary w-full my-4" href="${blok.link.url}">${blok.text}</a>`;
        break;
      default:
        return `Component ${component} not found`;
    }
  },
});
---

<section class="px-4 py-16 sm:px-6 mx-auto lg:px-8 lg:py-20 max-w-6xl" {...storyblokEditable(blok)} id={blok.component}>
    <h2 class="mb-8 text-3xl lg:text-4xl font-bold font-heading text-center">
        {blok.title}
    </h2>
    <div class="grid gap-6 row-gap-10 md:grid-cols-2 items-center">
        <div class="md:pb-6 md:pr-16">
            <div class="prose" set:html={renderedRichText}></div>
		</div>
		<div class="md:pb-6 md:pr-16">
			<h3 class="mb-8 text-xl lg:text-2xl font-bold font-heading">
				Key dates
			</h3>

			{keyDates.map(({name, date}, index) => {
				
				if (index + 1 === keyDates.length) return <KeyDate name={name} date={date} last={true} />
				
				return <KeyDate name={name} date={date} />
				
			})}
		</div>
	</div>
</section>
